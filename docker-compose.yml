services:
  db:
    image: postgres:${PG_VERSION}
    container_name: mlflow_postgres
    restart: always
    expose:
      - "${PG_PORT}"
    networks:
      - backend-network
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "-p", "${PG_PORT}", "-U", "${PG_USER}"]
      interval: 5s
      timeout: 5s
      retries: 3

  s3:
    image: minio/minio:${MINIO_VERSION}
    container_name: mlflow_minio
    restart: always
    volumes:
      - ./minio_data:/data
    env_file:
      - ./.env
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    networks:
      - frontend-network
      - backend-network
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_ADDRESS=${MINIO_ADDRESS}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_STORAGE_USE_HTTPS=${MINIO_STORAGE_USE_HTTPS}
      - MINIO_CONSOLE_ADDRESS=${MINIO_CONSOLE_ADDRESS}
    command: server /data --address ":9000" --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  tracking_server:
    build: ./mlflow
    image: mlflow_server
    container_name: mlflow_server
    restart: always
    depends_on:
      - db
      - s3
    ports:
      - "${MLFLOW_PORT}:5000"
    networks:
      - frontend-network
      - backend-network
    environment:
      - AWS_ACCESS_KEY_ID=H1oGk8c1LwgZ8X3SSYWF
      - AWS_SECRET_ACCESS_KEY=GBuYcgheF6L5Bcyn9qrzcrnYoaJlDWGoVuzVtDqb
      - MLFLOW_S3_ENDPOINT_URL=http://s3:9000
      - MLFLOW_S3_IGNORE_TLS=true
      - MLFLOW_ARTIFACTS_BUCKET=mlflow
    command: >
      mlflow server
      --backend-store-uri postgresql://${PG_USER}:${PG_PASSWORD}@db:${PG_PORT}/${PG_DATABASE}
      --host 0.0.0.0
      --serve-artifacts
      --artifacts-destination s3://mlflow
      --default-artifact-root s3://mlflow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/ || exit 0"]
      interval: 30s
      timeout: 30s
      retries: 5

  fastapi-app:
    build: ./mlflow/fastapi
    image: fastapi_service
    container_name: fastapi_app
    restart: always
    depends_on:
      - tracking_server
    ports:
      - "8000:8000"
    networks:
      - frontend-network
      - backend-network
    environment:
      - MLFLOW_TRACKING_URI=http://tracking_server:5000
      - DATABASE_URL=postgresql://${PG_USER}:${PG_PASSWORD}@db:${PG_PORT}/${PG_DATABASE}
    command: >
      uvicorn api:app --host 0.0.0.0 --port 8000 --workers 4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs || exit 0"]
      interval: 30s
      timeout: 30s
      retries: 5

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge

